package com.example.contentproviders;

import android.content.ContentProvider;
import android.content.ContentValues;
import android.content.Context;
import android.content.UriMatcher;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteDatabase.CursorFactory;
import android.database.sqlite.SQLiteOpenHelper;
import android.net.Uri;
import android.util.Log;

/*
 * 自定义的内容提供者需要扩展抽象类ContentProvider
 */
public class BooksProvider extends ContentProvider{
	
	static final String PROVIDER_NAME="com.example.contentproviders.Books";
	
	static final Uri CONTENT_URI=Uri.parse("content://"+PROVIDER_NAME+"/books");
	
	static final String _ID="_id";
	static final String TITLE="title";
	static final String ISBN="isbn";
	
	static final int BOOKS=1;
	static final int BOOK_ID=2;
	
	private static final UriMatcher uriMatcher;
	
	static {
		uriMatcher=new UriMatcher(UriMatcher.NO_MATCH);
		uriMatcher.addURI(PROVIDER_NAME, "books", BOOKS);
		uriMatcher.addURI(PROVIDER_NAME, "books/#", BOOK_ID);
	}
	
	//定义数据库
	SQLiteDatabase booksDB;
	static final String DATABASE_NAME="Books";
	static final String DATABASE_TABLE="titles";
	static final int DATABASE_VERSION=1;
	static final String DATABASE_CREATE="create table "+DATABASE_TABLE+" (_id integer primary key autoincrement, "
			+"title text not null, isbn text not null);";
	
	private static class DatabaseHelper extends SQLiteOpenHelper{
		
		DatabaseHelper(Context context){
			super(context,DATABASE_NAME,null,DATABASE_VERSION);
		}
		
		
		public DatabaseHelper(Context context, String name, CursorFactory factory, int version) {
			super(context, name, factory, version);
			// TODO Auto-generated constructor stub
		}

		@Override
		public void onCreate(SQLiteDatabase db) {
			// TODO Auto-generated method stub
			db.execSQL(DATABASE_CREATE);
		}

		@Override
		public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
			// TODO Auto-generated method stub
			Log.w("Content provider database", 
					"Upgrading database from version "
			+oldVersion
			+"to "
			+newVersion+",which will destroy all old data");
			db.execSQL("DROP TABLE IF EXISTS titles");
			onCreate(db);
		}
		
		
		
	}
	
	@Override
	public int delete(Uri uri, String selection, String[] selectionArgs) {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public String getType(Uri uri) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Uri insert(Uri uri, ContentValues values) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public boolean onCreate() {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public Cursor query(Uri uri, String[] projection, String selection, String[] selectionArgs, String sortOrder) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public int update(Uri uri, ContentValues values, String selection, String[] selectionArgs) {
		// TODO Auto-generated method stub
		return 0;
	}
	
}
